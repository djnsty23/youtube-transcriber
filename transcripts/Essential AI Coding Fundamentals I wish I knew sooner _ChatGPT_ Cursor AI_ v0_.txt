Jason what are we going to learn this episode yeah uh so I think what I want to introduce today is like my workflow of AI [Music] coding yeah um awesome yeah so the part I want to share a little bit is that uh the how do you get the large langage model or AI coding flow uh streamline so that you can get a more predicable result so problem we really want to solve is that larger ler model based coding is probably the hardest Topic at the moment uh everyone is learning it uh but and everyone when you like look at tutorial online often you get a vibe that you can just prompt ask it to build something and just build the whole thing out for you uh but in reality I think once you start using it uh you realize the result is really un pedable um because the nature of large Lang model is kind of you hallucinate a little bit uh so every time you start trying you'll just get a bunch of arrows uh not exactly the uh smooth selling you will see from the tutorial that people add it a couple times um and uh so what I try to solve is like okay I've been try to explore is there any kind of workflow that we can try to get the AI coding a bit more consistent read out uh and uh this the kind of thing I want to showcase today uh it's actually fairly simple and straightforward like the one of the most first and most important thing is like I would spend a lot of time up front to actually write very clear and detailed specs um and uh I know many people already talk about it I know one of your previous podcast also mentioned like planning up up front is important but uh I don't think a lot of people talk about in details like how should you actually write a spec right what are steps you should take to get a spec that can communicate with C very well uh and the process I think eventually want to simulate is how like product team working r normally you have PM kind of right on the spec of the core functionality you don't want cover and then you would hand over to engineer manager to kind of spec out like individ tickets or the architecture of the uh project structure so it leaves much less ambiguity for later uh so we probably want to do something similar which I will showcase a uh example uh and benefit of that is like you start really getting uncover a lot of uncertainty UPF front and taking out the planning work a f cursor um a lot to get a more consistent result uh so this kind of one thing and second is like also be very clear about the role of different platform uh so there are different tools like cursor VZ uh replate uh but it's not very clear often when to use what and the best thing I found is like you kind of want to get cursor to just focus on functionality and uh don't even just don't even think about UI at the beginning and then you start using vzer to like touch up uh U UI interface bit by bit and this will get you like a lot more success and try to get to everything at once um and third thing I found is quite like uh interesting to think about is like how can you have reusable modular prompt um so uh they are already uh kind of things people try like uh cursor do directory where people share like the collection of cursor rules uh by found like cursor rules most of the time is actually not that useful um there it didn't like deliver too much B results what's really interesting is that there are actually features and functionalities are pretty standard uh if you try to spin up like 10 different star ideas uh you don't want to rebut like sign in user o uh it's always same same like payment so as a community can we have this kind of collection of those reusable modular prompt you can just give to cursor and it will spit out whole functionality for you I think that's really useful and I can showcase one like prompt I have been reused again again for like user o to show how this work um yeah this is this is really exciting and I'll explain why so writing clear and detailed specs is something I think is an art uh more than a science and it's something I don't know how to do really well so I look forward to figuring out how to do that two cursor first v0 second everyone does the opposite everyone does vzer first put your ideas out there get the wireframes and then go cursor so I look forward to figuring out uh why you say that um I'm I'm I'm interested in that and then the third like the reusable modular promps like I know I should be doing this I just don't know how I can leverage them where I could find them so this is this is the Hard video that people actually need to sit through um because it's way more fun to sit through a here's a 20 minute Co coding an IOS app using AI coding but it's way more hard to sit through here's what you actually need to do to transition from being a yeah I've used cursor before or I've used AI coding before to I'm now an AI coder yeah exactly uh and maybe that's because my kind of background my background is like product designer and product manager so like writing spec is kind of naturally it's the thing you kind of want to do uh there's a very big difference if you tell engineer team okay go build like a social media platform versus like here is the key features um and uh it's it's kind of similar thing and uh uh curse the cursor first and v0 second is also the thing because my background I normally kind of feel like I know what kind of product I want to build like prototyping is very easy um and uh it's pretty fast to do um but the hard part I also found is that if you keep it better open-ended uh often it doesn't give you what it want and once it have the structure to get a change to what you want is really really difficult um that's also kind of the reason um why is it um and uh and I think one thing probably to best way to do that is probably can take through example of how can we build a uh let's say application uh use this type of workflow uh but one thing too clear is that shh don't tell anyone but I've got 30 plus startup by ideas that could make you millions and I'm giving them away for free these aren't just random guesses they're validated Concepts from entrepreneurs who built hundred million plus businesses I've compiled them into one simple database compiled from hundreds of conversations I've had on my podcast but the main thing is most of these ideas don't need a single investor some cost nothing to start I'm pretty much handing you a cheat sheet the idea bank is your startup shortcut just click below to get access your next cash flowing business is waiting for you what this does I think from my experience really improve the success rate it didn't really promise that it will always get it right so or say if I get any curse for demo today so um one thing I want to actually uh since we're going to take through a uh case study uh I saw we can just RW some kind of interesting application uh and I know one of your video actually showcase a platform called gumy search which I really like I I think I heard about this platform from uh that video you made uh and I thought this pretty genius actually platform or utilize uh like application of large Lang model because it kind of use the best part of large L model that is really really good at which is like structure insights from unstructured data at very big scale um and I think if people use that one part is like when I try it out even though it's very interesting uh I need to pay $10 per day to gather it out so kind of cheap uh so I want to say okay let's maybe just repute this um and uh on the other hand I think this kind of model can probably also be used for other type of uh data as well I can totally imagine this similar interaction uh can be used for like Facebook group um Discord or other datas so it might be interestes startup have idea to try out to uh but anyway so I will showcase this example um first thing I will probably just try to create a uh Ripple so let's say t new so I also use start with uh GitHub so I have better version control uh and then I will open cursor of the project uh so the first thing I I actually want to do uh instead of like just you open the cursor and so hey build me this redit platform um I actually just start with a uh kind of draft spec um and uh the common structure are prob paste in a template the common structure is something look like this for me um so I will give it a little bit project overview uh about what's go uh and then break down the core functionality just like a normal product manager or designer do uh then there's a bunch of things that's actually very important to get it uh get it aligned one is that I would try to include some Doc docs about how to implement some key features uh so I know cursor have this functionality allowed to add uh insert uh the whole documentation but quite often I found it didn't work very well uh so what we want to do is actually I want to build some kind of proof concept early on um to making sure the core functionality is already very clearly sped out uh and later I also will try to in include like current file structure as well because quite often I found that uh one reason curs offer fail is because it has no idea about how the file project structured so it just create a file in wrong place wrong dependency so this will take out more uncertainty from the process and in the end I were adding some kind additional requirements so this is a part where uh depends on what type of project you're creating like if you're creating web app there just a bunch of things curs always get it wrong uh or or can can miss like uh you need to making sure uh like use use client or you want to making sure the file is creating in the right place making sure you use environment varibles things like that uh so I think eventually we can probably have set of like those additional common P for different type of project you created uh and for web application um like this is the ones that I often just use I was saving my noteb uh and uh when I create a web app I would just paste it in but it's IOS app you can probably have a different set of things uh like where should you create the purest and files uh when you use like API call making sure um you're sing the right way environment variable making sure you have aor handling things like that uh so let's firstly with the project overview um so project overview can be pretty simple um for this specific project I would probably just putting something like you are building a rad analytics plat form where users can get analytics of different subus where they can see top content and see the um category appro and as simple as that um but what's very important next is the core functionality so this is where your start like spit out what are the like M have feature for for the product um so if your product manager is probably pretty familiar uh it basically in this case I would say it has to be able to see a list of available Subarus and probably add a new Subarus uh you we need to build a a subit page to Showcase two tabs like top host and SS because from my use of gy search I found the most valuable part is like this categorization um so I will do that and then uh we need a way to fetch R post data in the top post as well as analysis uh of the RIT post data uh putting them into different seams uh so this kind of like a early spec uh and uh in here I kind of just try to keep it open like you don't need to um force yourself to write down every single detail but it should be clear enough to communicate what uh what is like goal of this project and the core functionalities um and this should give you good enough starting point um the next is that I want to start uh adding some docs um so this is where I will try to build some pral concept of the core functionalities so in our case we probably have two big Parts one is that we need to figure out a way to GA the uh subus posts uh we figure out which package to use and what's the code and second is that we also want to use open AI public structure output functionality to uh like GA the categorization of the posts uh and to do that normally we're go to like different place to do some research about package I want to use so for example for the first day the uh redit data I can go to chbt and say I'm building a next uh JS project and needs to Fat RIT data which package should I use to implement then you will probably get an understanding about uh what kind of packages they can use uh this is probably particularly useful for let's say uh things that already exist before like for R probably already exists before but for using you or do some Google search and once I understand the package in this case is snow wrap uh I can just go to mpm uh which is like package management to find that specific package um and in here you can either load the whole doc but I normally try to take a look at the examples to understand like how this work so here I always say like there are multiple different ways I can authenticate uh either through the refresh token or the username and password um so what did you can do next is that I want to start building some kind of pro concept uh so I can open uh this is the time like first time I start open uh cursor composer so I can add that uh documentation I already added here so it's right here snow wrap so I would say that um help me help me build a simple type script uh script to fatch subreddit posts from past 24 hours from a specific uh subedit let's say Doc uh including uh like post title uh link content score uh number of comments and I want to use a username and password uh as for us uh and also making sure you use Dov for credentials CU I don't I want to expose M um and then it rest start try to just create a very simple script hopefully uh to do this um and meanwhile um while we're doing this we actually need to get some credential for the uh Reddit as well so I think you need to go to Reddit perf uh slapps to create app uh this also part of the reason why you do this kind of research up front is useful because then you can like kind of get understanding of where to go uh to prepare everything so I can put a analytics and script the r our URL I just put Local Host for now and create app um and if I go back to here uh you can say okay this time it tried to create a script but didn't create a file for me for rethm but that's all good um we were just uh uh includeed script and I will create a Reddit dots pasting here uh and I also create a EMV file uh and uh I will need to put in the credential that we got here as well as secret and I'll put my username I just take out to put my password here okay once it's finished uh then I can go back to the terminal let's try to testing out um so I will do uh MPX TS node uh Reddit dots okay so this is kind of reason why you want to do this early on because you were start getting those arrows but if you try to uh not using those ones those Arrow will show up later as well uh so I call this Arrow help me debug is that what you usually say just help me debug yeah help me because uh depends if it's simple issue I will just uh take help me fix it uh but otherwise I will also like try to find rot cause let's think step by step where like using Ching of Ching of soft prompt uh okay so I got this one let me try again uh all right still get more arrows go this Arrow help me help me fix this let sync step by step okay I think I know why I need to tag this update this file for me based on changes above while this is happening it's crazy cuz you're a product manager now you're an engineer right so it's like what is the role of the product manager if you know because the old way of becoming a product manager was you'd write specs hand the specs over see product but now it's you write specs and you build product yeah exactly I kind of think like this AI coding start uh enable everyone become kind of product manager um and that's really really cool CU I I saw what's really unlock is a bunch of people who are consumers that don't do this codes now but you suddenly have this ability um okay perfect now you can see that it returned the result of the Reddit post so now we know this code example is going to work um then we can um paste this into the doc so here I will say uh document documentation for how to fatch uh Reddit posts using uh snow uh W uh and I can say code example and one thing I probably also do is like uh try to reference a little bit um like in this title I will put for number three so it's very clear what's it four okay so we get this part done and the next part is a another code example probably for open AI uh and open a it's like a perfect example I guarantee the first time it will fail because it is using some old documentation um so we want probably use structure output uh to categorize post um so I can basically do something similar so for this I can add a new composer or add doc open and structure output uh so this time I will say uh probably just paste something in help me build a simple uh type script uh script using open AI uh structured output to categorize subreddit for each category here and I can probably paste in the uh all the category that we defined earlier actually didn't allow me to categorize things public so I would just type it out when people asking uh for tools and solutions pin and anger when people expressing pinpoints and frustrations advice request asking for advice and resources money talk uh when people talking about spending money uh an airm should return result in format like categories solution request true false ping anger true false advice request true Force money talk and true force uh okay so this should uh should be pretty clear in ter and I try to include those kind of uh results as well so I can communicate clearly what is the exped result that I can include in document too quick ad break let me tell you about a business I invested in it's called boring marketing.com so a few years ago I met this group of people that were some of the best SEO experts in the world they were behind getting some of the biggest companies found on Google and the secret sauce is they've got a set of technology and AI that could help you outrank your competition so for my own businesses I wanted that I didn't want to have to rely on Mark Zuckerberg I didn't want to depend on ads to drive customers to my businesses I wanted to rank high in Google that's why I like SEO and that's why I use boring marketing.com and that's why I invested in it they're so confident in their approach that they offer a 30-day Sprint with 100% money back guarantee who does that nowadays so check it out highly recommend boring marketing.com and this just always blows my mind that you're able just to access the billions of dollars that was SP on creating open AI in an instant for whatever application software that you want to create yeah it's pretty crazy um have you saw sound like what's like most interesting uh kind of application you saw people building with cursor did you see some people start launching a business already um you know I've seen a lot I've also seen you know bolt repet cursor you know it's starting it's really starting to get crazy I just had the CEO of repet on the Pod oh yeah I saw that that's he was you know people are like he was telling a story of how the SE like a teacher goes and like go starts building using repet and repet agent and all of a sudden like raises $20 million quits his job it's just it's insane yeah that's crazy because there's just so so many creativities when the barrier lower um that's awesome uh okay so this is like perfect example so even though I provide document add documents um it will just ignore the documents and then start using some old model and also not really using the structure output uh so this is where I would like start prompting it further uh probably even remove the documents uh so say you are not following the best practice uh below are the code exam Le so I will go to the documentation um I probably try to find a specific example uh that they have before and then putting here uh and uh a few problems I noticed that they have is like you need to update uh based on example above which are press say users. package for defining data structure and use the GPT 40 model and uh move the category description to Z Model description itself and uh make the prompt more generic not tied to specific categories and don't specify the Json output structure uh because I want to make it like later if we want to add new category uh then it'll be easier I was going to ask you about that uh you know that makes sense so it's when you're when you're doing stuff like this it's it's it's good not just to only think about what you're building today but how you know what it could look like is what you're saying yeah exactly exactly because now otherwise it'll be really difficult to kind of maintain uh if everything just impr prompt like that um and that's where like you also by earlier doing those spec and uh research you can align this a little bit earlier and easier uh because when you have like 10 different task later for agent uh it's very hard to align individually okay now you can see that updated um or just accept it uh now let's try to round this so I do npxs note um subredit categorizer dots okay uh curse of demo is haunting me today um let me adding this call this arrow and when you get bugs do you do you get frustrated like do you get a bad feeling in your stomach how should one feel when when you get bugs uh uh it I think yeah that's why I I definitely feel didn't feel good uh and hopefully some of them goes away later uh with the with a newer and newer model um but yeah it's hard and and that's why initially I want to kind of break that down I learn kind of learn lesson like it just keep getting Circle for even very simple problem when you're looking to the actual fix um yeah that's that's that's very frustrated um yeah like for example in this case uh it made a change but you can't see that clearly the change here is wrong um so I will probably just uh but but because actually integrated a pretty good feature recently I don't know if you saw that check out and this will allow you to kind of review that a bit better so I can't this time I'm going to give you a bit more instruction so every time when that situation happen like I will kind of try different ways to Pro either promp it uh like get it Sy step by step or give it a bit more instruction or additional documentation so I got Arrow above uh please help me fix it based on the code example here so um just copy paste again help me fix it I love when they're like I apologize for the confusion yeah yeah very patient programmer that you don't ever got in the real life okay so yeah it is using the right one but I'm going to change the model here let's try again um all right still got an arrow please help me fix it let sync step by step hopefully this work work goes away later once we put together documentations true I've never seen someone say let's think step by step why did you why did you write that uh that's because uh like n in previous large Range model uh this's a very common technique called Ching of s uh so basically once you get uh you kind of get it to switch geers um so when they try to uh it's like system one and system two syncing uh in the in the book kind of syncs fast and slow when you try to get it to do just everything at once and it often fail uh but when it break down into small steps it tend to have better result and that's what we kind of try to simulate here uh so once it try to think step step by step instead of give you like 2 plus 2 equal four it will try to think okay how do I break down into different steps so that often will Le to better results that's why I will kind of try to promp it for some kind of harder problems uh okay so this time I can see that it get results um and if I just try change this to be let's say I'm happy uh with my current project uh but want to uh how can I get my dog happier and if I track this hopefully the uh okay so this is not correct um but happier uh and I'm looking for there we go I'm looking for let's say uh a part that to feed the dog yeah there we go while I'm away okay so solution request is true so this is working and uh we're going to do the same thing I just uh going to uh include this as a second power code so documentation for how to categorize Reddit post using open AI structured [Music] output uh and the code example expected uh response so here include the expected response as well so it's it will know how to um put together with other features uh and I will also reference this here okay so that's pretty pretty good stting point um what I'm going to do next is actually uh I'm going to like set up project and put the file structure and actually get 01 model to help me uh fill in all the gaps I have I might have missed uh and to do that the first thing actually I want to set up project so I'm going to use chassen to set up project copy it why do you why do you choose Shaden like what do you like about it uh it looks good quite like the style and uh because they have a lot of wait uh sorry give me one oh sorry and to delete this package Json first uh because there are other like component library but uh not as like clean good coverage yeah yeah uh okay so redit Antics do you see other kind of uh UI component people use quite a bit yeah yeah but I think from in our world at least I'm just seeing the vast majority of people using Chad um CDM yeah yeah yeah and also another I think me read is because uh you if you use v0 then CH here kind of came out of as a default one so it's easier to maintain as well okay so now we set a project uh inside this project I will set up a folder called instructions uh and this is where I will uh firstly copy paste the draft over uh and uh I will probably also create a.v. loal just paste over the credential that we put in before um and next thing is I actually want to communicate the file structure because quite often uh cursor just don't know where to create each file and that's caused a lot of problem so you can use a package called a tree which will give you uh like the file structure fairly easily but our just do three level two which means it will only go down uh two level down I probably give oh sorry before that probably I would want to add some um UI component from chassan as well I put button input dialogue uh tabs table sheet uh card probably this ones will be needed uh and then I will do TR L2 and uh ignore node modules. kit so this were uh kind of exclude certain files that we don't care from the file structure and then it will return me this file structure that I can use to paste in here so then it will know better about where we are in ter of project setup uh so this a pretty pretty decent one uh but what I found is that when I just give this state to cursor it'll also have some Gap because there still a difference between the documents uh that product manager generated versus what engineer manager give to the engineers uh so what I often use is I will use this starting point then use uh like stronger model like 01 to help me fill in like getting them as a kind of engineer manager and start filling in the details interesting I never thought about that but that makes a lot of sense can you show us how you're going to show us how to do it yeah so in this specific case I would go to one model I would just paste in the whole like Doc we created so far and this kind of a standard prompt I normally will use uh so I firstly I wanted to generate the file structure um I just pting it then we will see so you can see that I pasted in the whole uh Doc and in the end uh I were ask to like above the project I want to build how should I structure my project file and that would give you a bunch of like common rules uh which is very similar to uh what I put in here in term of project setup uh it's basically give a bit more instruction like all new components should go to this folder uh page should go to this we are using nextjs this one uh then based on that uh over model first they try to propose okay this is like the final file like project structure or different components that we would need uh so it know what what towards and you can probably take a look here to see if this align with what you were thinking because sometimes you identify some kind of very clear mistake they might have repeat component folder twice things like that um but if this looks good U this the benefit of this one you can see is that it actually will spit up uh do a bit planning and architect project a little bit more uh and they try to also identify what kind of dependencies uh would be there as well uh and if I think this looks good then I can use the par how now help me adding all the details uh of the original PRD um and uh I don't need to create actual code just PRD and including file structure and documentation things like that and based on that it should be able to like create a very like detailed uh documentation uh that hopefully going to communicate the spec a lot better because now you can say like it will uh Define the functionality that a lot in a lot more details as well as the uh actual variables and file structures uh and additional requirements and as someone who's worked with engineers in the past this PRD Doc is like makes them light up right this is exactly what they want they don't want to see like here's two features I really want and I don't blame them right it's important to actually have a strong PRD if you want to have an end product that is is going to be super tight um and ultimately valuable to people exactly uh it also leave a lot less ambiguity as well um like one problem I think people often found is like if you are a new product manager uh you see people just keep delivering things that not exactly what you want um and this will hopefully take a lot a lot of guas work from the process um okay so this is pretty decent one uh and then the next thing is is that we can finally start getting cursor composer to start building this um and uh what I'll do is I'll probably do a submit so the project set up comit um and uh now I will try to get this to build the app so I open cursor composer um I'm building a Reddit Antics platform stre strictly based on this instruction now let's build uh this number one first uh so this is kind of one benefit of having doc because then you can break down into small tasks where it can have less room for Arrow so I would just ask it to implement the first part and it should be able to start creating components based on the like plan project structure and dependency it's happening it's happening and hopefully this will reduce amount of Errors you have all right let's see um mpm round def okay here you go so you can see the like as you can see the UI is bit off but as I mentioned I'm going to just ignore that for now so it has the cards to display the sub Rus if I click on that it will not do anything because this part hasn't been implemented yet uh but I will go back here and then give it some uh great uh now let's do the second part oh I see so you're just going one by one yeah exactly uh because I previously TR I found when I tried to create everything it first much like likely it's going to have ever out uh but also it will sometimes just skip some steps for some reason right yeah no it makes sense right cuz you're you know people talk about one-shotting it right oh I use this prompt and I built this app and you know it's like well then you have like a bunch of errors and it's going to make it way longer to you know I think the strategy what you're basically saying is it's kind of like crawl walk run you know step by step yeah exactly uh okay so I have a second one and if we open this you can see that the page that like structure is created as well and the next one I can get it to do great uh now let's do the S step make sure you refer to uh here I probably would just Bas on instruction uh based on instruction I again make sure you refer to uh the documentation at the bottom uh now if I go back and refresh page okay got some arrows and let me check if it has any arrows in the uh okay so this time those type of Errors is bit more kind of annoying because you don't really have a good way to communicate with cursor uh so so normally the first thing I would do is that I would just say uh it say uh please help me add debug info to the code uh so this probably normally First St I do just add it debug so I have a way to communicate B specific arrows to cursor so that it can actually figure out right fix right cuz you don't you don't know what's going on yeah because in this case it's very hard to communicate you can probably try your best to explain and uh probably still get the in uh get the solution wrong because it has so little information okay so if I go to here um um let me check if my credential is correct looks correct um and uh just uh going to copy paste those arrows got arrows above still fail to fetch and display redit post okay I just uh check again making sure it didn't mess up voice my credentials okay here you go so this time we can see the Reddit post has been displayed popularly um and now we can move to like the last step um great it works now let's uh P the last part by the way the thing with curser just for people building sometimes it's fast sometimes it's slow sometimes it's down yeah and and you know it's just be aware of that yeah it is um especially if you're using like uh more more like powerful model you can slow down a little bit yeah it's actually kind of crazy because they got so much traffic and uh volume past few months and it still keeps things going okay this another arrow um very likely so another good thing so errow out but good thing of that previous research is that I think we kind of know why because very likely the same reason it eror before it error again because I found the cursor or lary model generally is not great at uh getting the you can see that now it's gbd4 which don't have the support for the structure output if I try it again refresh okay here we go um so now you can see that all those redit posts has been categorized in different category like solution request pain anger and I can click on there to see the specific posts um so this is kind of like example of how can you build this one uh there more feature can build out but uh this is kind of the workflow I will use uh normally to like turn them into proper Doc and they can build step by step to get to a app that it's actually going to be used um but and this is probably the time I will start diving to the UI part as well so as example uh because the project functionality now has been built up uh to get UI right is actually going to be more predictable and easier because I can just go to let's say the homepage first uh and then go to VZ I will paste this in uh and then I will start ask it to like just make it better look better uh so this is kind of problem I nor sorry I build this app uh please keep the functionality exactly like above but make the UI a ton better um and uh I can also add some specific style that I want um so I probably prefer black and white uh maybe dark mode as well similar to verel really smart move to also put examples like similar style to versel um is a good T yeah yeah because I found otherwise it were interpret looks better in different ways do you found uh I Haven uh do you find like some other good prompts uh that you see from vzer from other guest so someone told me the other day and this is such an obvious thing to do but he was just like buy a bunch of books around design and I ordered like five books and just write like create prompts from the design books like go and go and get the best Amazon books for design and just and maybe I'll include some a couple of them in in the description people are interested um and then create prompts from them yeah right I see so it's like uh you literally put it as part of prompt uh for the books well it's like the problem with the reason why people can't get a lot out of EAS zero is cu frankly they don't have the language to understand what good good design is so the answer what's the answer the answer is to become well versed in design and how do you do that there are books about that sort of stuff so and then comment below I can also do a whole video on how to get the most from from vzero if people are interested that PR cool okay okay I just uh uh sorry this is a component for the separated card uh let me check did I do anything wrong here B component display if I go to the oh so pting the wrong thing earlier okay and you normally will get Arrow here but you can just ignore um paste in here okay so now you can see that the Styles start looking better uh but this is just like one example inside is still not as good but you can basically imagine we can just go component by component um but everything will just look a lot better um and uh because you already provide code and you can just prompt v0 to say follow structure and just update UI uh and you can see now the the the room for Arrow is a lot less if we do this um and we can probably do another uh but before I do that uh instead of updating updating the UI itself uh actually I'll probably just do one last part um so we can go to the separat this um update that as well to this play subredit page and is there while we are waiting for is there any kind of like startup idea on top of your mind that you are pretty Keen to start build out if you get time for cursor I have a uh a note a notes file where I just put startup ideas in I call it ideas I think everyone should have one most people who listen to the startup ideas podcast have one um it's literally just I'm not going to share it on screen because want everyone to take all these ideas but um I got a million I can give you a a few I'll give you I start with one IMDb for creators is one like imagine like IMDb like is a directory of you know you'll find people like uh Brad Pit there but you're not going to find Jason zoo and Greg Eisenberg on Am IMDb right yeah so what does the IMDb for creators look like all right and the people can just go there and find the right Niche topic they care about yeah I think it's like a way you know it's a directory of people who are creating content in different niches I think that whenever you know whenever someone is going diving into something new they want to find trusted interesting content creators so it's it's it's a directory of th of those people I think that would do really well that would be Co it sounds pretty straightforward for the curs of Debut so for sure and that's a good point right there's some ideas that are straightforward for cursor to do and there's some ideas that are not yeah exactly okay so now start adding some icons uh but yeah this is kind of example of how you can start using you you can probably keep prompting it to like get a better and better to more align with what you want um like how you get get a UI uh the last part um that I want to quickly showcase is like how can you use some modular reusable pump uh so one I can probably quickly showcase is that uh this uh let me try to find so this one prompt I uh quite often use for uh like setting UPS o um so I can so their function as I mentioned before is pretty standard um and it can be applied to all the other projects and this is kind of one example that uh this is Doc I kind of used before to create authentication and since they are kind of similar to every single project I just I can just paste them in uh and then start uh like Implement us feature um so as quick quick example I just uh going to paste in the credential so now I can add a new uh new composer and then say uh I've build a Reddit analytics platform based on this uh please oh actually I might even remove this stock now please help me build the uh authentication user o function strictly based on this setup o. MD um I've done step one and two already which is like set up oos and install libraries uh now let's build step three and step four so you just start like build out the uh sign page sign up page and again with best we kind of want to uh do step by step great now let's do uh step five and great now let's do step six it's kind of annoying that currently we have two Ste problem step by step to get good results um I hope like with new project like boat uh or others can just connect this workflow that people are manually doing there definitely Gap there I feel yeah it's for sure coming yeah uh okay so I do need to set up the package here okay so uh now if I go to a Subarus and if I haven't log in it will just log feature just there and this is kind of one modular prompt uh can be used for like other platform uh they're pretty standard and same thing you can imagine is like for payment and now if I log out it would so take me back um but you can imagine like if we have a collection of this type of standard feature prompt uh and can be shared across the community then I think this going to be extremely useful uh because then I can just like take this prompt and uh to let's say build a payment system uh but I also Imagine like later for those developer tools uh they might have a new ways for people to use it like instead of like R documents you might have a prompt that you can just take and start integrating into the uh inter your application um so yeah this is this the one thing I'm really excited like I really hope someone can build a aggregator if not I my start one as well uh to just for this modular prompt that people can share um um yeah so this is kind of a quick example of how can we build uh the my workflow in like building uh with cursor uh with again the firstly our star with spent a lot of upfront time to write specs to reduce uncertainty as much as possible and then build functionality first and UI later and most importantly later I think we can start aggregated this list of reusable prompt um which will speed up the M process a lot more hopefully this is amazing this is like the fundamentals of AI coding um I'm one of those people I'm guilty of this like I just love going into vzo starting there doing no specs no modular prompts just kind of like going you know following my curiosity and now that I've been doing this for you know almost eight eight weeks I guess of AI coding um it stings it stings you know it makes my job a lot harder so thank thank you for coming in and and and sharing this and uh I hope people listen to this and and and start and start doing AI coding this way because I think it's it's it's proven it works and um it is fun it's just it's a bit more structured than a lot of people are used to yeah exactly like if it's more like people's expectation like if you compare with a impression that you just give a prompt and everything just work out then it feels hard but you kind of want to compare with how damond was doing before H now it's actually a lot easier compare with the real dment um that's right it's kind of like one of those uh electric assisted bicycles um the ones that you still need to Pedal the wheels um and it just gives you a little boost um that's how I see this um and um Jason where could where could people get to know you better uh I know you have some awesome tutorials on YouTube as well yeah so um thanks for that so um I'm also running a um a YouTube channel called AI Json so you can like go to YouTube and search for AI Json I do Post interesting AI experiments that I do from time to time um to teach you how to build with AI and large Range model so feel free to search and check out out that's awesome yes yes go subscribe uh to Jason it's it's free to subscribe and then if you like this video uh and you hopefully want to see more of Jason on on this channel um the startup ideas Channel go like comment subscribe I hate that I have to say it but if you don't do that then uh you won't get the videos in your feed it won't remind you to uh to go and build your ideas and you'll just be one of those people that just sits on ideas and doesn't do them so uh Jason thanks again um and I'll see you around yeah thanks a lot later [Music]